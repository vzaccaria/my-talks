#+INCLUDE: /Users/zaccaria/development/github/org-institutional/my-talks/unicredit/org-headers/header_beamer_xelatex.org
#+STARTUP: showall indent latexpreview entitiespretty

#+TITLE: DSLs in finance, an overview
#+LATEX_CLASS_OPTIONS: [aspectratio=169]

#+LATEX_HEADER: \usepackage{semantic}
#+LATEX_HEADER: \setmonofont[
#+LATEX_HEADER:   Contextuals={Alternate}, Scale=0.7,
#+LATEX_HEADER:   Scale=MatchLowercase % (LD.)
#+LATEX_HEADER: ]{Fira Code}


#+LATEX_HEADER: \newcommand{\semc}[1]{\mathcal{C}|[#1|]}
#+LATEX_HEADER: \newcommand{\semcd}[2]{\mathcal{C}|[#1|] & = & #2}
#+LATEX_HEADER: \newcommand{\seme}[1]{\mathcal{E}|[#1|]}
#+LATEX_HEADER: \newcommand{\semed}[2]{\mathcal{E}|[#1|] & = & #2}
#+LATEX_HEADER: \newcommand{\tme}{\mathbb{N}}
#+LATEX_HEADER: \newcommand{\reals}{\mathbb{R}}
#+LATEX_HEADER: \newcommand{\envvars}{|[\Gamma|]}
#+LATEX_HEADER: \newcommand{\describe}[2]{\underbrace{#1}_{\text{#2}}}
#+LATEX_HEADER: \newcommand{\describeu}[2]{\overbrace{#1}^{\text{#2}}}
#+LATEX_HEADER: \newcommand{\assetexchange}[3]{\text{#1}(#2 \rightarrow #3)}
#+LATEX_HEADER: \newcommand{\observe}[2]{\text{Obs}(#1,#2)}
#+LATEX_HEADER: \newcommand{\event}[1]{\text{#1}}
#+LATEX_HEADER: \newcommand{\ite}[4]{\text{if}~{#1}~\text{in}~{#2}~\text{then}~{#3}~\text{else}~#4}



* Introduction
* Contract languages
** Certified symbolic management cite:Bahr:2015hm

- Contracts are expressed in relative times

- Can describe stipulation between multiple parties (~&~ operator)

- Can describe /observable external decisions/:

  $$\ite{\describe{\observe{\event{X exercises option}}{0}}{eval'd at the beginning of each day}}{\describeu{90}{days' range}}{100*\describe{\assetexchange{DKK}{Y}{X}}{atomic exchange contract}}{0}$$

** Findel cite:Biryukov:2017ip
- Absolute times;

- Syntax similar to others but no intuitive reference to parties involved as
  contracts change over time:

  $$\describe{Give(10 * One(USD))}{Bob pays 10 now} \wedge \describeu{At(now+1~years, 11 * One(USD))}{Bob expects to receive 11 in a year}$$




* Semantics
** Certified symbolic management cite:Bahr:2015hm

Subdivides semantics into *contract* and *expression* (denotational) semantics.
Contract semantics maps expressions into a cash-flow trace:
$$ C: \envvars \rightarrow \describeu{\tme \rightarrow \describe{Party \times Party \times Asset \rightarrow \reals}{transaction}}{trace} $$

for example (note the delay $\uparrow$ and /unit transfer/ $\rightarrow$ operators)[fn:1]:
#+BEGIN_EXPORT latex
  \begin{equation}
  \begin{array}{rcl}
  \semcd{0}{\lambda n. \lambda t . 0}\\
  \semcd{c1 \& c2}{\semc{c1} + \semc{c2}} \\
  \semcd{d \uparrow c}{\lambda n. \semc{c}(n - d)} \\
  \semcd{a(p_1 \rightarrow p_2)}{\lambda n.\lambda t.\delta_{0,(p_1,p_2,a)}(n,t) - \delta_{0,(p_2,p_1,a)}(n,t)} \\
  \end{array}
  \end{equation}
#+END_EXPORT
** Certified symbolic management

Contract transforms consist in specialisation and advancement, i.e.,
instantiation of a contract to a concrete starting time or simplification.
Consider the following contract:
  $$\assetexchange{DKK}{Y}{Z} ~\&~ \ite{\observe{\event{X defaults}}{0}}{30}{\assetexchange{DKK}{Z}{Y}}{0}$$

and assume that $$default(X,i)=\top~if~i=15,~\bot~otherwise$$ Then, at time
$i=16$, the contract can be transformed into:
  $$\assetexchange{DKK}{Y}{Z} ~\&~ \assetexchange{DKK}{Z}{Y} \sim 0$$



* Software verification and certified software
* Type systems
** Certified symbolic management

- *Problem*: Simple expressions could involve non-causality, e.g.:

  $$\describe{\textbf{obs}(FX(USD, DKK), 1)}{tomorrow's observation} \times \describe{DKK(X \rightarrow Y)}{pay today}$$

- *Solution*: time-indexed types;

** Certified symbolic management

*Examples* of typing rules using time-indexed types:

+ an observation at time $t$ is available at all times $t'$ after $t$:
  $$\inference{t \leq t'}{\Gamma |- \textbf{Obs}(l,t) : \tau^{t'}}$$

+ an expression $e$ can only meaningfully scale a contract $c$ if $e$ is
  available at some time $t'$ and $c$ makes no stipulations strictly before
  $t'$: $$\inference{\Gamma |- e: Real^{t'} & \Gamma |- c: Contr^{t'} & t \leq t'}{\Gamma |- e \times c:
  Contr^t}$$

** Temporal logic cite:Pnueli:1977wy

Correctness over time can be reduced to

- *Invariance*: a property holding throughout the execution of a program

- *Eventuality*: temporal implication, or a property $Q$ eventually follows from $P$










* References
** Papers
bibliographystyle:unsrt
bibliography:biblio.bib

* Footnotes


[fn:1] $\delta$ = Kronecker's delta
